#! /usr/bin/env python

import sys
import os
import shutil
import urllib.request
import codecs
import datetime
import pandas as pd
import numpy as np
import markdown
from tabulate import tabulate

"""
Analyses output CSV generated by Bash script, and generates reports in Markdown and HTML
"""

def dfToMarkdown(dataframe, headers='keys'):
    """Convert Data Frame to Markdown table with optionally custom headers"""
    mdOut = dataframe.pipe(tabulate, headers=headers, tablefmt='pipe')
    return mdOut

def main():
    if len(sys.argv) < 3:
        sys.stderr.write("USAGE: report.py <inputFile> <dirOut>\n")
        sys.exit()
    else:
        fileEcResults=sys.argv[1]
        dirOut=os.path.normpath(sys.argv[2])

    if not os.path.isfile(fileEcResults):
        sys.stderr.write("Input file does not exist\n")
        sys.exit()

    if not os.path.isdir(dirOut):
        os.makedirs(dirOut)


    # Markdown-formatted string that is used to write report
    mdString = ''
    mdString += '# ID analysis report\n'

    mdString += '\nReport generated: ' + datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + '\n'
    mdString += '\nInput file: ' + fileEcResults + '\n'

    # Read CSV to Data Frame
    epubsAll = pd.read_csv(fileEcResults, index_col=0, encoding="utf-8")

    # Number of files
    noEpubs = len(epubsAll)

    # Frequency of mime types
    epubVCounts = epubsAll['mimeType'].value_counts().to_frame()

    # Add column with relative frequencies
    versionRelFrequencies = []
    for i, row in epubVCounts.iterrows():
        relFrequency = 100*row[0]/noEpubs
        versionRelFrequencies.append(round(relFrequency, 2))
    
    epubVCounts.insert(1, '%', versionRelFrequencies)

    mdString += '\n\n## MIME types\n\n'
    mdString += dfToMarkdown(epubVCounts,['MIMEType', 'Count', '% of all files'])

    # Open output report (Markdown format) for writing
    try:
        reportMD = os.path.join(dirOut, 'reportid.md')
        fOut = codecs.open(reportMD, "w", "utf-8")
    except:
        sys.stderr.write("Cannot write output report\n")
        sys.exit()

    fOut.write(mdString)
    fOut.close()

main()

